// This is your Prisma schema file, learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Employee {
  employeeId      Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  email           String           @unique
  password        String
  firstName       String
  middleInitial   String?
  lastName        String
  occupation      String
  serviceRequestsAssigned ServiceRequest[] @relation(name:"assignedTo")
  serviceRequestsMade ServiceRequest[] @relation(name:"requestedBy")
}

//**
//* Each type of service request inherits from ServiceRequest
//* Only translator requests for Iteration 1
//*/
model ServiceRequest {
  requestId          Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  requestStatus String
  priority String

  // tables that inherit from ServiceRequest:
  translatorRequest  TranslatorRequest?
  equipmentRequest EquipmentRequest?
  securityRequest    SecurityRequest[]
  // assigned relationship to Employee:
  assignedEmployeeId Int?
  assignedEmployee   Employee?           @relation(name:"assignedTo", fields: [assignedEmployeeId], references: [employeeId])
  // the employee who made the request
  employeeRequestedById Int
  employeeRequestedBy Employee @relation(name:"requestedBy", fields: [employeeRequestedById], references: [employeeId])
  // which department it's made under
  departmentUnderId Int
  departmentUnder Department  @relation(fields: [departmentUnderId], references: [departmentId])
}

model TranslatorRequest {
  languageFrom     String
  languageTo       String
  roomNum          String
  startDateTime    DateTime
  endDateTime      DateTime
  // link to service request:
  serviceRequestId Int            @unique
  serviceRequest   ServiceRequest @relation(fields: [serviceRequestId], references: [requestId])
}

model SecurityRequest {
  numOfGuards        Int
  securityType       String
  additionalComments String
  // link to service request:
  serviceRequestId   Int            @unique
  serviceRequest     ServiceRequest @relation(fields: [serviceRequestId], references: [requestId])
}

model EquipmentRequest {
  roomNum String
  startDateTime DateTime
  endDateTime DateTime
  medicalDevice String
  signature String //picture of signature
  quantity Int
  comments String
  // link to service request
  serviceRequestId Int @unique
  serviceRequest ServiceRequest @relation(fields: [serviceRequestId], references: [requestId])
}

enum RequestType {
  TranslatorRequest
  EquipmentRequest
}

model Department {
  departmentId      Int     @id @default(autoincrement())
  name              String
  floor             Int
  suite             String
  specialtyServices String
  hours             String?
  telephone         String
  serviceRequests ServiceRequest[]
}
