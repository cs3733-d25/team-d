// This is your Prisma schema file, learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Employee {
  employeeId      Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  email           String           @unique
  password        String
  firstName       String
  middleInitial   String?
  lastName        String
  occupation      String
  serviceRequests ServiceRequest[]
}

//**
//* Each type of service request inherits from ServiceRequest
//* Only translator requests for Iteration 1
//*/
model ServiceRequest {
  requestId          Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  // tables that inherit from ServiceRequest:
  translatorRequest  TranslatorRequest[]
  // assigned relationship to Employee:
  assignedEmployeeId Int?
  assignedEmployee   Employee?           @relation(fields: [assignedEmployeeId], references: [employeeId])
}

model TranslatorRequest {
  languageFrom     String
  languageTo       String
  roomNum          String
  startDateTime    DateTime
  endDateTime      DateTime
  // link to service request:
  serviceRequestId Int            @unique
  serviceRequest   ServiceRequest @relation(fields: [serviceRequestId], references: [requestId])
}

enum RequestType {
  TranslatorRequest
}

// model Department {
//   departmentId      Int     @id @default(autoincrement())
//   name              String
//   floor             Int
//   suite             String
//   specialtyServices String
//   hours             String?
//   telephone         String
// }

model Hospital {
  hospitalId  Int     @id @default(autoincrement())
  name        String  @unique
  placeId     String
  defaultZoom Int
  defaultLat  Float
  defaultLng  Float
  Floors      Floor[]
}

model Floor {
  floorId     Int          @id @default(autoincrement())
  num         Int
  imageURL    String
  north       Float
  south       Float
  east        Float
  west        Float
  hospitalId  Int
  Hospital    Hospital     @relation(fields: [hospitalId], references: [hospitalId])
  Departments Department[]
}

model Department {
  departmentId Int    @id @default(autoincrement())
  name         String
  suite        String
  floorId      Int
  Floor        Floor  @relation(fields: [floorId], references: [floorId])
}
