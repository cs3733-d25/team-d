// This is your Prisma schema file, learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Employee {
  employeeId      Int              @id @default(autoincrement())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  email           String           @unique
  password        String
  firstName       String
  middleInitial   String?
  lastName        String
  occupation      String
  serviceRequests ServiceRequest[]
}

//**
//* Each type of service request inherits from ServiceRequest
//* Only translator requests for Iteration 1
//*/
model ServiceRequest {
  requestId          Int                @id @default(autoincrement())
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  // tables that inherit from ServiceRequest:
  translatorRequest  TranslatorRequest?
  sanitationRequest  SanitationRequest?
  // assigned relationship to Employee:
  assignedEmployeeId Int?
  assignedEmployee   Employee?          @relation(fields: [assignedEmployeeId], references: [employeeId])
}

model TranslatorRequest {
  languageFrom     String
  languageTo       String
  roomNum          String
  startDateTime    DateTime
  endDateTime      DateTime
  // link to service request:
  serviceRequestId Int            @unique
  serviceRequest   ServiceRequest @relation(fields: [serviceRequestId], references: [requestId])
}

enum RequestType {
  TranslatorRequest
}

model Department {
  departmentId      Int     @id @default(autoincrement())
  name              String
  floor             Int
  suite             String
  specialtyServices String
  hours             String?
  telephone         String
}

// --- The SanitationRequest model ---
model SanitationRequest {
  roomNumber String
  priority   Priority
  type       SanitationType
  status     RoomStatus
  comments   String?

  // link to service request:
  serviceRequestId Int            @unique
  ServiceRequest   ServiceRequest @relation(fields: [serviceRequestId], references: [requestId])
}

enum Priority {
  LOW
  NORMAL
  HIGH
  URGENT
}

enum SanitationType {
  GENERAL
  DISINFECT
  DEEP_CLEANING
  WASTE_REMOVAL
  PEST_CONTROL
}

enum RoomStatus {
  VACANT
  IN_USE
}
